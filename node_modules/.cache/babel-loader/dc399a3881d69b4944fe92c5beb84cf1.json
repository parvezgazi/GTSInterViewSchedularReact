{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable max-len */\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { getRecurrenceStringFromDate, generate } from '../../recurrence-editor/date-generator';\nimport * as events from '../base/constant';\nimport * as util from '../base/util';\n/**\n * Schedule CRUD operations\n */\nvar Crud = /** @class */function () {\n  function Crud(parent) {\n    this.parent = parent;\n    this.crudObj = {\n      sourceEvent: null,\n      targetEvent: null,\n      isCrudAction: false\n    };\n  }\n  Crud.prototype.getQuery = function () {\n    var start = this.parent.activeView.startDate();\n    var end = this.parent.activeView.endDate();\n    return this.parent.dataModule.generateQuery(start, end);\n  };\n  Crud.prototype.getTable = function () {\n    if (this.parent.eventSettings.query) {\n      var query = this.parent.eventSettings.query.clone();\n      return query.fromTable;\n    }\n    return null;\n  };\n  Crud.prototype.refreshDataManager = function () {\n    var _this = this;\n    if (!this.parent.activeView) {\n      return;\n    }\n    var start = this.parent.activeView.startDate();\n    var end = this.parent.activeView.endDate();\n    var dataManager = this.parent.dataModule.getData(this.parent.dataModule.generateQuery(start, end));\n    dataManager.then(function (e) {\n      return _this.dataManagerSuccess(e);\n    }).catch(function (e) {\n      return _this.dataManagerFailure(e);\n    });\n  };\n  Crud.prototype.dataManagerSuccess = function (e) {\n    var _this = this;\n    if (!this.parent || this.parent && this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.trigger(events.dataBinding, e, function (args) {\n      var resultData = extend([], args.result, null, true);\n      _this.parent.eventsData = resultData.filter(function (data) {\n        return !data[_this.parent.eventFields.isBlock];\n      });\n      _this.parent.blockData = resultData.filter(function (data) {\n        return data[_this.parent.eventFields.isBlock];\n      });\n      _this.parent.refreshEvents(false);\n      if (_this.parent.dragAndDropModule && _this.parent.dragAndDropModule.actionObj.action === 'drag') {\n        _this.parent.dragAndDropModule.navigationWrapper();\n      }\n      _this.parent.trigger(events.dataBound, null, function () {\n        _this.parent.hideSpinner();\n        if (_this.parent.isPrinting) {\n          _this.parent.notify(events.print, {});\n        }\n      });\n    });\n  };\n  Crud.prototype.dataManagerFailure = function (e) {\n    var _this = this;\n    if (!this.parent || this.parent && this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.trigger(events.actionFailure, {\n      error: e\n    }, function () {\n      return _this.parent.hideSpinner();\n    });\n  };\n  Crud.prototype.refreshData = function (args) {\n    var _this = this;\n    var actionArgs = {\n      requestType: args.requestType,\n      cancel: false,\n      data: args.data,\n      addedRecords: args.editParams.addedRecords,\n      changedRecords: args.editParams.changedRecords,\n      deletedRecords: args.editParams.deletedRecords\n    };\n    if (this.parent.dragAndDropModule && this.parent.dragAndDropModule.actionObj && this.parent.dragAndDropModule.actionObj.element) {\n      this.parent.dragAndDropModule.actionObj.element.style.display = 'none';\n    }\n    if (this.parent.resizeModule && this.parent.resizeModule.actionObj && this.parent.resizeModule.actionObj.element) {\n      this.parent.resizeModule.actionObj.element.style.display = 'none';\n    }\n    if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.activeViewOptions.group.allowGroupEdit && !this.parent.rowAutoHeight && !this.parent.virtualScrollModule && this.parent.activeViewOptions.group.byGroupID) {\n      if (args.requestType === 'eventCreated' || args.requestType === 'eventRemoved') {\n        this.crudObj.isCrudAction = true;\n        this.crudObj.sourceEvent = [];\n        var crudData = args.data instanceof Array ? args.data.length === 0 && args.requestType === 'eventRemoved' ? args.editParams.deletedRecords : args.data : (typeof args.data === 'string' || typeof args.data === 'number') && args.requestType === 'eventRemoved' ? args.editParams.deletedRecords : [args.data];\n        var _loop_1 = function (data) {\n          this_1.crudObj.isCrudAction = !(args.requestType === 'eventRemoved' && !isNullOrUndefined(data.parent));\n          var groupIndex = this_1.parent.eventBase.getGroupIndexFromEvent(data);\n          if (groupIndex > -1 && this_1.parent.crudModule.crudObj.sourceEvent.filter(function (tdData) {\n            return tdData.groupIndex === groupIndex;\n          }).length === 0 && this_1.crudObj.isCrudAction) {\n            this_1.crudObj.sourceEvent.push(this_1.parent.resourceBase.lastResourceLevel[groupIndex]);\n          }\n        };\n        var this_1 = this;\n        for (var _i = 0, crudData_1 = crudData; _i < crudData_1.length; _i++) {\n          var data = crudData_1[_i];\n          _loop_1(data);\n        }\n        this.crudObj.targetEvent = this.crudObj.sourceEvent;\n      }\n    }\n    if (this.parent.dataModule.dataManager.dataSource.offline) {\n      this.parent.trigger(events.actionComplete, actionArgs, function (offlineArgs) {\n        if (!offlineArgs.cancel) {\n          _this.refreshDataManager();\n        }\n      });\n    } else {\n      args.promise.then(function () {\n        if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\n          return;\n        }\n        _this.parent.trigger(events.actionComplete, actionArgs, function (onlineArgs) {\n          if (!onlineArgs.cancel) {\n            _this.refreshDataManager();\n          }\n        });\n      }).catch(function (e) {\n        if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\n          return;\n        }\n        _this.parent.trigger(events.actionFailure, {\n          error: e\n        });\n      });\n    }\n  };\n  Crud.prototype.addEvent = function (eventData) {\n    var _this = this;\n    if (this.parent.eventSettings.allowAdding && !this.parent.activeViewOptions.readonly) {\n      if (!this.isBlockEvent(eventData) && this.parent.eventBase.isBlockRange(eventData)) {\n        this.parent.quickPopup.openValidationError('blockAlert', eventData);\n        return;\n      }\n      var addEvents = eventData instanceof Array ? eventData : [eventData];\n      var args = {\n        requestType: 'eventCreate',\n        cancel: false,\n        data: addEvents,\n        addedRecords: addEvents,\n        changedRecords: [],\n        deletedRecords: []\n      };\n      this.parent.trigger(events.actionBegin, args, function (addArgs) {\n        if (!addArgs.cancel) {\n          var fields = _this.parent.eventFields;\n          var editParams = {\n            addedRecords: [],\n            changedRecords: [],\n            deletedRecords: []\n          };\n          var promise = void 0;\n          if (addArgs.addedRecords instanceof Array) {\n            for (var _i = 0, _a = addArgs.addedRecords; _i < _a.length; _i++) {\n              var event_1 = _a[_i];\n              event_1 = _this.parent.eventBase.updateEventDateTime(event_1);\n              var eventData_1 = extend({}, _this.parent.eventBase.processTimezone(event_1, true), null, true);\n              editParams.addedRecords.push(eventData_1);\n            }\n            promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n          } else {\n            var event_2 = _this.parent.eventBase.processTimezone(addArgs.addedRecords, true);\n            editParams.addedRecords.push(event_2);\n            promise = _this.parent.dataModule.dataManager.insert(event_2, _this.getTable(), _this.getQuery());\n          }\n          var crudArgs = {\n            requestType: 'eventCreated',\n            cancel: false,\n            data: addArgs.addedRecords,\n            promise: promise,\n            editParams: editParams\n          };\n          _this.refreshData(crudArgs);\n        }\n      });\n    }\n  };\n  Crud.prototype.saveEvent = function (eventData, action) {\n    var _this = this;\n    if (this.parent.eventSettings.allowEditing && !this.parent.activeViewOptions.readonly) {\n      if (this.parent.currentAction !== 'EditFollowingEvents' && !this.isBlockEvent(eventData) && this.parent.eventBase.isBlockRange(eventData)) {\n        this.parent.quickPopup.openValidationError('blockAlert', eventData);\n        return;\n      }\n      this.parent.currentAction = action;\n      if (action) {\n        switch (action) {\n          case 'Save':\n            this.processSave(eventData);\n            break;\n          case 'EditOccurrence':\n            this.processOccurrences(eventData, action);\n            break;\n          case 'EditFollowingEvents':\n            this.processFollowSeries(eventData, action);\n            break;\n          case 'EditSeries':\n            this.processEntireSeries(eventData, action);\n            break;\n        }\n      } else {\n        var updateEvents = eventData instanceof Array ? eventData : [eventData];\n        var args = {\n          requestType: 'eventChange',\n          cancel: false,\n          data: eventData,\n          addedRecords: [],\n          changedRecords: updateEvents,\n          deletedRecords: []\n        };\n        this.parent.trigger(events.actionBegin, args, function (saveArgs) {\n          if (!saveArgs.cancel) {\n            var promise = void 0;\n            var fields = _this.parent.eventFields;\n            var editParams = {\n              addedRecords: [],\n              changedRecords: [],\n              deletedRecords: []\n            };\n            if (saveArgs.changedRecords instanceof Array) {\n              for (var _i = 0, _a = saveArgs.changedRecords; _i < _a.length; _i++) {\n                var event_3 = _a[_i];\n                event_3 = _this.parent.eventBase.updateEventDateTime(event_3);\n                var eventData_2 = extend({}, _this.parent.eventBase.processTimezone(event_3, true), null, true);\n                editParams.changedRecords.push(eventData_2);\n              }\n              promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n            } else {\n              var event_4 = _this.parent.eventBase.processTimezone(saveArgs.changedRecords, true);\n              editParams.changedRecords.push(event_4);\n              promise = _this.parent.dataModule.dataManager.update(fields.id, event_4, _this.getTable(), _this.getQuery());\n            }\n            var crudArgs = {\n              requestType: 'eventChanged',\n              cancel: false,\n              data: saveArgs.changedRecords,\n              promise: promise,\n              editParams: editParams\n            };\n            _this.refreshData(crudArgs);\n          }\n        });\n      }\n    }\n  };\n  Crud.prototype.deleteEvent = function (eventData, action) {\n    var _this = this;\n    if (this.parent.eventSettings.allowDeleting && !this.parent.activeViewOptions.readonly) {\n      this.parent.currentAction = action;\n      var deleteEvents = [];\n      if (typeof eventData === 'string' || typeof eventData === 'number') {\n        deleteEvents = this.parent.eventsData.filter(function (eventObj) {\n          return eventObj[_this.parent.eventFields.id] === eventData;\n        });\n      } else {\n        deleteEvents = eventData instanceof Array ? eventData : [eventData];\n      }\n      if (action) {\n        switch (action) {\n          case 'Delete':\n            this.processDelete(deleteEvents);\n            break;\n          case 'DeleteOccurrence':\n            this.processOccurrences(deleteEvents, action);\n            break;\n          case 'DeleteFollowingEvents':\n            this.processFollowSeries(deleteEvents, action);\n            break;\n          case 'DeleteSeries':\n            this.processEntireSeries(deleteEvents, action);\n            break;\n        }\n      } else {\n        var args = {\n          requestType: 'eventRemove',\n          cancel: false,\n          data: eventData,\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: deleteEvents\n        };\n        this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\n          if (!deleteArgs.cancel) {\n            var promise = void 0;\n            var fields = _this.parent.eventFields;\n            var editParams = {\n              addedRecords: [],\n              changedRecords: [],\n              deletedRecords: []\n            };\n            if (deleteArgs.deletedRecords.length > 1) {\n              editParams.deletedRecords = editParams.deletedRecords.concat(deleteArgs.deletedRecords);\n              promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n            } else {\n              editParams.deletedRecords.push(deleteArgs.deletedRecords[0]);\n              promise = _this.parent.dataModule.dataManager.remove(fields.id, deleteArgs.deletedRecords[0], _this.getTable(), _this.getQuery());\n            }\n            _this.parent.eventBase.selectWorkCellByTime(deleteArgs.deletedRecords);\n            var crudArgs = {\n              requestType: 'eventRemoved',\n              cancel: false,\n              data: deleteArgs.deletedRecords,\n              promise: promise,\n              editParams: editParams\n            };\n            _this.refreshData(crudArgs);\n          }\n        });\n      }\n    }\n  };\n  Crud.prototype.processOccurrences = function (eventData, action) {\n    var _this = this;\n    var occurrenceData = [];\n    var isDeletedRecords = false;\n    if (eventData instanceof Array) {\n      for (var _i = 0, eventData_3 = eventData; _i < eventData_3.length; _i++) {\n        var event_5 = eventData_3[_i];\n        occurrenceData.push({\n          occurrence: event_5,\n          parent: this.getParentEvent(event_5)\n        });\n      }\n    } else {\n      occurrenceData = {\n        occurrence: eventData,\n        parent: this.getParentEvent(eventData)\n      };\n    }\n    var updateEvents = eventData instanceof Array ? eventData : [eventData];\n    var args = {\n      requestType: action === 'EditOccurrence' ? 'eventChange' : 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: updateEvents,\n      deletedRecords: []\n    };\n    args.data = occurrenceData;\n    this.parent.trigger(events.actionBegin, args, function (occurrenceArgs) {\n      if (!occurrenceArgs.cancel) {\n        var fields = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        var occurrenceEvents = occurrenceData instanceof Array ? occurrenceData : [occurrenceData];\n        var _loop_2 = function (a, count) {\n          var childEvent = occurrenceArgs.changedRecords[a];\n          var parentEvent = occurrenceEvents[a].parent;\n          var parentException = parentEvent[fields.recurrenceException];\n          var editedData = void 0;\n          var exceptionDate = void 0;\n          switch (action) {\n            case 'EditOccurrence':\n              editedData = _this.parent.eventsProcessed.filter(function (event) {\n                return event.Guid === childEvent.Guid;\n              })[0];\n              exceptionDate = _this.excludeDateCheck(editedData[fields.startTime], parentException);\n              if (exceptionDate !== parentEvent[fields.recurrenceException]) {\n                parentEvent[fields.recurrenceException] = exceptionDate;\n                childEvent[fields.recurrenceException] = getRecurrenceStringFromDate(editedData[fields.startTime]);\n                childEvent[fields.recurrenceID] = parentEvent[fields.id];\n                childEvent[fields.followingID] = null;\n                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              } else {\n                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              }\n              break;\n            case 'DeleteOccurrence':\n              if (!childEvent[fields.recurrenceException]) {\n                parentEvent[fields.recurrenceException] = _this.excludeDateCheck(childEvent[fields.startTime], parentException);\n                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n              }\n              if (childEvent[fields.id] !== parentEvent[fields.id]) {\n                editParams.deletedRecords.push(childEvent);\n                isDeletedRecords = true;\n              }\n              break;\n          }\n        };\n        for (var a = 0, count = occurrenceArgs.changedRecords.length; a < count; a++) {\n          _loop_2(a, count);\n        }\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n        _this.parent.eventBase.selectWorkCellByTime(occurrenceArgs.changedRecords);\n        var crudArgs = {\n          requestType: action === 'EditOccurrence' ? 'eventChanged' : 'eventRemoved',\n          cancel: false,\n          data: isDeletedRecords ? occurrenceArgs.deletedRecords : occurrenceArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n  Crud.prototype.processFollowSeries = function (eventData, action) {\n    var _this = this;\n    var followData = [];\n    if (eventData instanceof Array) {\n      for (var _i = 0, eventData_4 = eventData; _i < eventData_4.length; _i++) {\n        var event_6 = eventData_4[_i];\n        followData.push({\n          occurrence: event_6,\n          parent: this.getParentEvent(event_6)\n        });\n      }\n    } else {\n      followData = {\n        occurrence: eventData,\n        parent: this.getParentEvent(eventData)\n      };\n    }\n    var updateFollowEvents = eventData instanceof Array ? eventData : [eventData];\n    var args = {\n      requestType: action === 'EditFollowingEvents' ? 'eventChange' : 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: updateFollowEvents,\n      deletedRecords: []\n    };\n    args.data = followData;\n    this.parent.trigger(events.actionBegin, args, function (followArgs) {\n      if (!followArgs.cancel) {\n        var fields_1 = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        var followEvents = followData instanceof Array ? followData : [followData];\n        var _loop_3 = function (a, count) {\n          var childEvent = followArgs.changedRecords[a];\n          var parentEvent = followEvents[a].parent;\n          var followData_1 = _this.parent.eventBase.getEventCollections(parentEvent, childEvent);\n          var isSpanned = void 0;\n          switch (action) {\n            case 'EditFollowingEvents':\n              _this.processRecurrenceRule(parentEvent, childEvent);\n              isSpanned = !_this.parent.eventBase.isFollowingEvent(parentEvent, childEvent);\n              childEvent[fields_1.followingID] = isSpanned ? null : parentEvent[fields_1.id];\n              childEvent[fields_1.recurrenceID] = null;\n              editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n              if (!_this.parent.uiStateValues.isIgnoreOccurrence) {\n                childEvent[fields_1.recurrenceException] = null;\n                if (followData_1.occurrence.length > 0) {\n                  var rule = followData_1.occurrence.slice(-1)[0][fields_1.recurrenceRule];\n                  if (rule.indexOf('COUNT') === -1) {\n                    childEvent[fields_1.recurrenceRule] = rule;\n                  }\n                }\n                if (followData_1.follow.length > 0) {\n                  childEvent[fields_1.recurrenceRule] = followData_1.follow.slice(-1)[0][fields_1.recurrenceRule];\n                  editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.follow);\n                }\n                if (isSpanned) {\n                  followData_1.occurrence = followData_1.occurrence.filter(function (eventObj) {\n                    return eventObj[fields_1.recurrenceID] === childEvent[fields_1.id];\n                  });\n                }\n                editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence);\n              }\n              break;\n            case 'DeleteFollowingEvents':\n              _this.processRecurrenceRule(parentEvent, childEvent[fields_1.startTime]);\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n              editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence).concat(followData_1.follow);\n              break;\n          }\n        };\n        for (var a = 0, count = followArgs.changedRecords.length; a < count; a++) {\n          _loop_3(a, count);\n        }\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_1.id, _this.getTable(), _this.getQuery());\n        _this.parent.eventBase.selectWorkCellByTime(followArgs.changedRecords);\n        var crudArgs = {\n          requestType: action === 'EditFollowingEvents' ? 'eventChanged' : 'eventRemoved',\n          cancel: false,\n          data: followArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n  Crud.prototype.processEntireSeries = function (eventData, action) {\n    var _this = this;\n    var seriesData = [];\n    var isDeletedRecords = false;\n    if (eventData instanceof Array) {\n      for (var _i = 0, eventData_5 = eventData; _i < eventData_5.length; _i++) {\n        var event_7 = eventData_5[_i];\n        seriesData.push(this.getParentEvent(event_7, true));\n      }\n    } else {\n      seriesData = this.getParentEvent(eventData, true);\n    }\n    var updateSeriesEvents = eventData instanceof Array ? eventData : [eventData];\n    var args = {\n      requestType: action === 'EditSeries' ? 'eventChange' : 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: updateSeriesEvents,\n      deletedRecords: []\n    };\n    args.data = seriesData;\n    this.parent.trigger(events.actionBegin, args, function (seriesArgs) {\n      if (!seriesArgs.cancel) {\n        var fields_2 = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        var seriesEvents = seriesData instanceof Array ? seriesData : [seriesData];\n        var _loop_4 = function (a, count) {\n          var childEvent = seriesArgs.changedRecords[a];\n          var parentEvent = seriesEvents[a];\n          var eventCollections = _this.parent.eventBase.getEventCollections(parentEvent);\n          var deletedEvents = eventCollections.follow.concat(eventCollections.occurrence);\n          switch (action) {\n            case 'EditSeries':\n              if (childEvent[fields_2.startTime] > parentEvent[fields_2.startTime] && childEvent[fields_2.recurrenceRule]) {\n                _this.processRecurrenceRule(parentEvent, childEvent);\n              }\n              childEvent[fields_2.id] = parentEvent[fields_2.id];\n              childEvent[fields_2.recurrenceID] = null;\n              childEvent[fields_2.followingID] = null;\n              if (_this.parent.uiStateValues.isIgnoreOccurrence && childEvent[fields_2.recurrenceException]) {\n                var originalParent = _this.parent.eventsData.filter(function (eventObj) {\n                  return eventObj[fields_2.id] === childEvent[fields_2.id];\n                });\n                if (originalParent.length > 0) {\n                  childEvent[fields_2.recurrenceRule] = originalParent[0][fields_2.recurrenceRule];\n                }\n              } else {\n                childEvent[fields_2.recurrenceException] = null;\n                editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents);\n              }\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              _this.parent.uiStateValues.isIgnoreOccurrence = false;\n              break;\n            case 'DeleteSeries':\n              editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents.concat(parentEvent));\n              isDeletedRecords = true;\n              break;\n          }\n        };\n        for (var a = 0, count = seriesArgs.changedRecords.length; a < count; a++) {\n          _loop_4(a, count);\n        }\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_2.id, _this.getTable(), _this.getQuery());\n        _this.parent.eventBase.selectWorkCellByTime(seriesArgs.changedRecords);\n        var crudArgs = {\n          requestType: action === 'EditSeries' ? 'eventChanged' : 'eventRemoved',\n          cancel: false,\n          data: isDeletedRecords ? seriesArgs.deletedRecords : seriesArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n  Crud.prototype.processDelete = function (eventData) {\n    var _this = this;\n    var deleteData = [];\n    for (var _i = 0, eventData_6 = eventData; _i < eventData_6.length; _i++) {\n      var eventObj = eventData_6[_i];\n      if (eventObj[this.parent.eventFields.recurrenceRule]) {\n        deleteData.push({\n          occurrence: eventObj,\n          parent: this.getParentEvent(eventObj)\n        });\n      } else {\n        deleteData.push(eventObj);\n      }\n    }\n    var args = {\n      requestType: 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: [],\n      deletedRecords: eventData\n    };\n    args.data = deleteData;\n    this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\n      if (!deleteArgs.cancel) {\n        var fields_3 = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        var _loop_5 = function (a, count) {\n          var isDelete = isNullOrUndefined(deleteArgs.deletedRecords[a][_this.parent.eventFields.recurrenceRule]);\n          if (!isDelete) {\n            var parentEvent_1 = deleteData[a].parent;\n            var isEdited = editParams.changedRecords.filter(function (obj) {\n              return obj[fields_3.id] === parentEvent_1[fields_3.id];\n            });\n            var editedDate = deleteArgs.deletedRecords[a][fields_3.startTime];\n            if (isEdited.length > 0) {\n              var editedData = isEdited[0];\n              editedData[fields_3.recurrenceException] = _this.excludeDateCheck(editedDate, editedData[fields_3.recurrenceException]);\n            } else {\n              parentEvent_1[fields_3.recurrenceException] = _this.excludeDateCheck(editedDate, parentEvent_1[fields_3.recurrenceException]);\n            }\n            if (isEdited.length === 0) {\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent_1, true));\n            }\n            isDelete = deleteArgs.deletedRecords[a][fields_3.id] !== parentEvent_1[fields_3.id];\n          }\n          if (isDelete) {\n            editParams.deletedRecords.push(deleteArgs.deletedRecords[a]);\n          }\n        };\n        for (var a = 0, count = deleteArgs.deletedRecords.length; a < count; a++) {\n          _loop_5(a, count);\n        }\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_3.id, _this.getTable(), _this.getQuery());\n        var crudArgs = {\n          requestType: 'eventRemoved',\n          cancel: false,\n          data: deleteArgs.deletedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n  Crud.prototype.processSave = function (data) {\n    var _this = this;\n    var eventData = data instanceof Array ? data : [data];\n    var editData = [];\n    for (var _i = 0, eventData_7 = eventData; _i < eventData_7.length; _i++) {\n      var eventObj = eventData_7[_i];\n      if (eventObj[this.parent.eventFields.recurrenceRule]) {\n        editData.push({\n          occurrence: eventObj,\n          parent: this.getParentEvent(eventObj)\n        });\n      } else {\n        editData.push(eventObj);\n      }\n    }\n    var args = {\n      requestType: 'eventChange',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: eventData,\n      deletedRecords: []\n    };\n    args.data = editData;\n    this.parent.trigger(events.actionBegin, args, function (editArgs) {\n      if (!editArgs.cancel) {\n        var fields = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        for (var _i = 0, _a = editArgs.changedRecords; _i < _a.length; _i++) {\n          var record = _a[_i];\n          if (!isNullOrUndefined(record[fields.recurrenceRule]) && isNullOrUndefined(record[fields.recurrenceException])) {\n            var exceptionString = getRecurrenceStringFromDate(record[fields.startTime]);\n            var parentEle = _this.getParentEvent(record);\n            parentEle[fields.recurrenceException] = isNullOrUndefined(parentEle[fields.recurrenceException]) ? exceptionString : parentEle[fields.recurrenceException].concat(',' + exceptionString);\n            record[fields.id] = _this.parent.getEventMaxID();\n            record[fields.recurrenceException] = exceptionString;\n            editParams.addedRecords.push(_this.parent.eventBase.processTimezone(record, true));\n            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEle, true));\n          } else {\n            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(record, true));\n          }\n        }\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n        var crudArgs = {\n          requestType: 'eventChanged',\n          cancel: false,\n          data: editArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n  Crud.prototype.getParentEvent = function (event, isParent) {\n    if (isParent === void 0) {\n      isParent = false;\n    }\n    var parentEvent = this.parent.eventBase.getParentEvent(event, isParent) || event;\n    if (parentEvent[this.parent.eventFields.startTimezone] || parentEvent[this.parent.eventFields.endTimezone]) {\n      this.parent.eventBase.timezoneConvert(parentEvent);\n    }\n    return parentEvent;\n  };\n  Crud.prototype.excludeDateCheck = function (eventStartTime, exceptionDateList) {\n    var exDate = getRecurrenceStringFromDate(eventStartTime);\n    if (!isNullOrUndefined(exceptionDateList)) {\n      if (exceptionDateList.indexOf(exDate) === -1) {\n        exceptionDateList = !isNullOrUndefined(exceptionDateList) ? exceptionDateList + ',' + exDate : exDate;\n      }\n    } else {\n      exceptionDateList = exDate;\n    }\n    return exceptionDateList;\n  };\n  Crud.prototype.processRecurrenceRule = function (parentEvent, followEvent) {\n    var fields = this.parent.eventFields;\n    var recurrenceRule = parentEvent[fields.recurrenceRule];\n    var endDate;\n    if (followEvent instanceof Date) {\n      endDate = new Date(+followEvent);\n    } else {\n      endDate = new Date(+followEvent[fields.startTime]);\n      var newRecurrenceRule = followEvent[fields.recurrenceRule];\n      var startDate = parentEvent[fields.startTime];\n      var ruleException = this.parent.currentAction === 'DeleteFollowingEvents' ? followEvent[fields.recurrenceException] : null;\n      var dateCollection = generate(startDate, newRecurrenceRule, ruleException, this.parent.activeViewOptions.firstDayOfWeek);\n      var untilDate = new Date(dateCollection.slice(-1)[0]);\n      untilDate.setHours(endDate.getHours(), endDate.getMinutes(), endDate.getSeconds());\n      endDate.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds());\n      followEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(newRecurrenceRule, new Date(+untilDate), false);\n    }\n    parentEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(recurrenceRule, util.addDays(new Date(endDate.getTime()), -1), true);\n  };\n  Crud.prototype.getUpdatedRecurrenceRule = function (recurrenceRule, untilDate, isParent) {\n    var splitRule = recurrenceRule.split(';');\n    var updatedRule = '';\n    for (var _i = 0, splitRule_1 = splitRule; _i < splitRule_1.length; _i++) {\n      var rule = splitRule_1[_i];\n      if (rule !== '') {\n        var ruleKey = rule.split('=')[0];\n        var ruleValue = rule.split('=')[1];\n        if (ruleKey === 'COUNT' || ruleKey === 'UNTIL') {\n          ruleValue = getRecurrenceStringFromDate(untilDate);\n          rule = rule.replace(rule, 'UNTIL=' + ruleValue);\n        }\n        updatedRule += rule + ';';\n      }\n    }\n    if (isParent && updatedRule.indexOf('UNTIL') === -1) {\n      updatedRule += 'UNTIL=' + getRecurrenceStringFromDate(untilDate);\n    }\n    return updatedRule;\n  };\n  Crud.prototype.isBlockEvent = function (eventData) {\n    var eventCollection = eventData instanceof Array ? eventData : [eventData];\n    var value = false;\n    for (var _i = 0, eventCollection_1 = eventCollection; _i < eventCollection_1.length; _i++) {\n      var event_8 = eventCollection_1[_i];\n      value = event_8[this.parent.eventFields.isBlock] || false;\n    }\n    return value;\n  };\n  /**\n   * To destroy the crud module.\n   *\n   * @returns {void}\n   * @private\n   */\n  Crud.prototype.destroy = function () {\n    this.crudObj = null;\n    this.parent = null;\n  };\n  return Crud;\n}();\nexport { Crud };","map":{"version":3,"names":["isNullOrUndefined","extend","getRecurrenceStringFromDate","generate","events","util","Crud","parent","crudObj","sourceEvent","targetEvent","isCrudAction","prototype","getQuery","start","activeView","startDate","end","endDate","dataModule","generateQuery","getTable","eventSettings","query","clone","fromTable","refreshDataManager","_this","dataManager","getData","then","e","dataManagerSuccess","catch","dataManagerFailure","isDestroyed","trigger","dataBinding","args","resultData","result","eventsData","filter","data","eventFields","isBlock","blockData","refreshEvents","dragAndDropModule","actionObj","action","navigationWrapper","dataBound","hideSpinner","isPrinting","notify","print","actionFailure","error","refreshData","actionArgs","requestType","cancel","addedRecords","editParams","changedRecords","deletedRecords","element","style","display","resizeModule","activeViewOptions","group","resources","length","allowGroupEdit","rowAutoHeight","virtualScrollModule","byGroupID","crudData","Array","_loop_1","this_1","groupIndex","eventBase","getGroupIndexFromEvent","crudModule","tdData","push","resourceBase","lastResourceLevel","_i","crudData_1","dataSource","offline","actionComplete","offlineArgs","promise","onlineArgs","addEvent","eventData","allowAdding","readonly","isBlockEvent","isBlockRange","quickPopup","openValidationError","addEvents","actionBegin","addArgs","fields","_a","event_1","updateEventDateTime","eventData_1","processTimezone","saveChanges","id","event_2","insert","crudArgs","saveEvent","allowEditing","currentAction","processSave","processOccurrences","processFollowSeries","processEntireSeries","updateEvents","saveArgs","event_3","eventData_2","event_4","update","deleteEvent","allowDeleting","deleteEvents","eventObj","processDelete","deleteArgs","concat","remove","selectWorkCellByTime","occurrenceData","isDeletedRecords","eventData_3","event_5","occurrence","getParentEvent","occurrenceArgs","occurrenceEvents","_loop_2","a","count","childEvent","parentEvent","parentException","recurrenceException","editedData","exceptionDate","eventsProcessed","event","Guid","excludeDateCheck","startTime","recurrenceID","followingID","followData","eventData_4","event_6","updateFollowEvents","followArgs","fields_1","followEvents","_loop_3","followData_1","getEventCollections","isSpanned","processRecurrenceRule","isFollowingEvent","uiStateValues","isIgnoreOccurrence","rule","slice","recurrenceRule","indexOf","follow","seriesData","eventData_5","event_7","updateSeriesEvents","seriesArgs","fields_2","seriesEvents","_loop_4","eventCollections","deletedEvents","originalParent","deleteData","eventData_6","fields_3","_loop_5","isDelete","parentEvent_1","isEdited","obj","editedDate","editData","eventData_7","editArgs","record","exceptionString","parentEle","getEventMaxID","isParent","startTimezone","endTimezone","timezoneConvert","eventStartTime","exceptionDateList","exDate","followEvent","Date","newRecurrenceRule","ruleException","dateCollection","firstDayOfWeek","untilDate","setHours","getHours","getMinutes","getSeconds","getUpdatedRecurrenceRule","addDays","getTime","splitRule","split","updatedRule","splitRule_1","ruleKey","ruleValue","replace","eventCollection","value","eventCollection_1","event_8","destroy"],"sources":["C:/Users/DELL/Downloads/GTSInterviewSchedulerComponent-main/GTSInterviewSchedulerComponent-main/node_modules/@syncfusion/ej2-schedule/src/schedule/actions/crud.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable max-len */\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { getRecurrenceStringFromDate, generate } from '../../recurrence-editor/date-generator';\nimport * as events from '../base/constant';\nimport * as util from '../base/util';\n/**\n * Schedule CRUD operations\n */\nvar Crud = /** @class */ (function () {\n    function Crud(parent) {\n        this.parent = parent;\n        this.crudObj = { sourceEvent: null, targetEvent: null, isCrudAction: false };\n    }\n    Crud.prototype.getQuery = function () {\n        var start = this.parent.activeView.startDate();\n        var end = this.parent.activeView.endDate();\n        return this.parent.dataModule.generateQuery(start, end);\n    };\n    Crud.prototype.getTable = function () {\n        if (this.parent.eventSettings.query) {\n            var query = this.parent.eventSettings.query.clone();\n            return query.fromTable;\n        }\n        return null;\n    };\n    Crud.prototype.refreshDataManager = function () {\n        var _this = this;\n        if (!this.parent.activeView) {\n            return;\n        }\n        var start = this.parent.activeView.startDate();\n        var end = this.parent.activeView.endDate();\n        var dataManager = this.parent.dataModule.getData(this.parent.dataModule.generateQuery(start, end));\n        dataManager.then(function (e) { return _this.dataManagerSuccess(e); }).catch(function (e) { return _this.dataManagerFailure(e); });\n    };\n    Crud.prototype.dataManagerSuccess = function (e) {\n        var _this = this;\n        if (!this.parent || this.parent && this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.trigger(events.dataBinding, e, function (args) {\n            var resultData = extend([], args.result, null, true);\n            _this.parent.eventsData = resultData.filter(function (data) { return !data[_this.parent.eventFields.isBlock]; });\n            _this.parent.blockData = resultData.filter(function (data) { return data[_this.parent.eventFields.isBlock]; });\n            _this.parent.refreshEvents(false);\n            if (_this.parent.dragAndDropModule && _this.parent.dragAndDropModule.actionObj.action === 'drag') {\n                _this.parent.dragAndDropModule.navigationWrapper();\n            }\n            _this.parent.trigger(events.dataBound, null, function () {\n                _this.parent.hideSpinner();\n                if (_this.parent.isPrinting) {\n                    _this.parent.notify(events.print, {});\n                }\n            });\n        });\n    };\n    Crud.prototype.dataManagerFailure = function (e) {\n        var _this = this;\n        if (!this.parent || this.parent && this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.trigger(events.actionFailure, { error: e }, function () { return _this.parent.hideSpinner(); });\n    };\n    Crud.prototype.refreshData = function (args) {\n        var _this = this;\n        var actionArgs = {\n            requestType: args.requestType, cancel: false, data: args.data,\n            addedRecords: args.editParams.addedRecords, changedRecords: args.editParams.changedRecords,\n            deletedRecords: args.editParams.deletedRecords\n        };\n        if (this.parent.dragAndDropModule && this.parent.dragAndDropModule.actionObj && this.parent.dragAndDropModule.actionObj.element) {\n            this.parent.dragAndDropModule.actionObj.element.style.display = 'none';\n        }\n        if (this.parent.resizeModule && this.parent.resizeModule.actionObj && this.parent.resizeModule.actionObj.element) {\n            this.parent.resizeModule.actionObj.element.style.display = 'none';\n        }\n        if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.activeViewOptions.group.allowGroupEdit\n            && !this.parent.rowAutoHeight && !this.parent.virtualScrollModule && this.parent.activeViewOptions.group.byGroupID) {\n            if (args.requestType === 'eventCreated' || args.requestType === 'eventRemoved') {\n                this.crudObj.isCrudAction = true;\n                this.crudObj.sourceEvent = [];\n                var crudData = args.data instanceof Array ? (args.data.length === 0 &&\n                    args.requestType === 'eventRemoved' ? args.editParams.deletedRecords : args.data) :\n                    ((typeof args.data === 'string' || typeof args.data === 'number') && args.requestType === 'eventRemoved') ?\n                        args.editParams.deletedRecords : [args.data];\n                var _loop_1 = function (data) {\n                    this_1.crudObj.isCrudAction = !(args.requestType === 'eventRemoved' && !isNullOrUndefined(data.parent));\n                    var groupIndex = this_1.parent.eventBase.getGroupIndexFromEvent(data);\n                    if (groupIndex > -1 && this_1.parent.crudModule.crudObj.sourceEvent.filter(function (tdData) { return tdData.groupIndex === groupIndex; }).length === 0\n                        && this_1.crudObj.isCrudAction) {\n                        this_1.crudObj.sourceEvent.push(this_1.parent.resourceBase.lastResourceLevel[groupIndex]);\n                    }\n                };\n                var this_1 = this;\n                for (var _i = 0, crudData_1 = crudData; _i < crudData_1.length; _i++) {\n                    var data = crudData_1[_i];\n                    _loop_1(data);\n                }\n                this.crudObj.targetEvent = this.crudObj.sourceEvent;\n            }\n        }\n        if (this.parent.dataModule.dataManager.dataSource.offline) {\n            this.parent.trigger(events.actionComplete, actionArgs, function (offlineArgs) {\n                if (!offlineArgs.cancel) {\n                    _this.refreshDataManager();\n                }\n            });\n        }\n        else {\n            args.promise.then(function () {\n                if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\n                    return;\n                }\n                _this.parent.trigger(events.actionComplete, actionArgs, function (onlineArgs) {\n                    if (!onlineArgs.cancel) {\n                        _this.refreshDataManager();\n                    }\n                });\n            }).catch(function (e) {\n                if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\n                    return;\n                }\n                _this.parent.trigger(events.actionFailure, { error: e });\n            });\n        }\n    };\n    Crud.prototype.addEvent = function (eventData) {\n        var _this = this;\n        if (this.parent.eventSettings.allowAdding && !this.parent.activeViewOptions.readonly) {\n            if (!this.isBlockEvent(eventData) && this.parent.eventBase.isBlockRange(eventData)) {\n                this.parent.quickPopup.openValidationError('blockAlert', eventData);\n                return;\n            }\n            var addEvents = (eventData instanceof Array) ? eventData : [eventData];\n            var args = {\n                requestType: 'eventCreate', cancel: false, data: addEvents,\n                addedRecords: addEvents, changedRecords: [], deletedRecords: []\n            };\n            this.parent.trigger(events.actionBegin, args, function (addArgs) {\n                if (!addArgs.cancel) {\n                    var fields = _this.parent.eventFields;\n                    var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                    var promise = void 0;\n                    if (addArgs.addedRecords instanceof Array) {\n                        for (var _i = 0, _a = addArgs.addedRecords; _i < _a.length; _i++) {\n                            var event_1 = _a[_i];\n                            event_1 = _this.parent.eventBase.updateEventDateTime(event_1);\n                            var eventData_1 = extend({}, _this.parent.eventBase.processTimezone(event_1, true), null, true);\n                            editParams.addedRecords.push(eventData_1);\n                        }\n                        promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n                    }\n                    else {\n                        var event_2 = _this.parent.eventBase.processTimezone(addArgs.addedRecords, true);\n                        editParams.addedRecords.push(event_2);\n                        promise = _this.parent.dataModule.dataManager.insert(event_2, _this.getTable(), _this.getQuery());\n                    }\n                    var crudArgs = {\n                        requestType: 'eventCreated', cancel: false, data: addArgs.addedRecords, promise: promise, editParams: editParams\n                    };\n                    _this.refreshData(crudArgs);\n                }\n            });\n        }\n    };\n    Crud.prototype.saveEvent = function (eventData, action) {\n        var _this = this;\n        if (this.parent.eventSettings.allowEditing && !this.parent.activeViewOptions.readonly) {\n            if (this.parent.currentAction !== 'EditFollowingEvents' && !this.isBlockEvent(eventData)\n                && this.parent.eventBase.isBlockRange(eventData)) {\n                this.parent.quickPopup.openValidationError('blockAlert', eventData);\n                return;\n            }\n            this.parent.currentAction = action;\n            if (action) {\n                switch (action) {\n                    case 'Save':\n                        this.processSave(eventData);\n                        break;\n                    case 'EditOccurrence':\n                        this.processOccurrences(eventData, action);\n                        break;\n                    case 'EditFollowingEvents':\n                        this.processFollowSeries(eventData, action);\n                        break;\n                    case 'EditSeries':\n                        this.processEntireSeries(eventData, action);\n                        break;\n                }\n            }\n            else {\n                var updateEvents = (eventData instanceof Array) ? eventData : [eventData];\n                var args = {\n                    requestType: 'eventChange', cancel: false, data: eventData,\n                    addedRecords: [], changedRecords: updateEvents, deletedRecords: []\n                };\n                this.parent.trigger(events.actionBegin, args, function (saveArgs) {\n                    if (!saveArgs.cancel) {\n                        var promise = void 0;\n                        var fields = _this.parent.eventFields;\n                        var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                        if (saveArgs.changedRecords instanceof Array) {\n                            for (var _i = 0, _a = saveArgs.changedRecords; _i < _a.length; _i++) {\n                                var event_3 = _a[_i];\n                                event_3 = _this.parent.eventBase.updateEventDateTime(event_3);\n                                var eventData_2 = extend({}, _this.parent.eventBase.processTimezone(event_3, true), null, true);\n                                editParams.changedRecords.push(eventData_2);\n                            }\n                            promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n                        }\n                        else {\n                            var event_4 = _this.parent.eventBase.processTimezone(saveArgs.changedRecords, true);\n                            editParams.changedRecords.push(event_4);\n                            promise = _this.parent.dataModule.dataManager.update(fields.id, event_4, _this.getTable(), _this.getQuery());\n                        }\n                        var crudArgs = {\n                            requestType: 'eventChanged', cancel: false,\n                            data: saveArgs.changedRecords, promise: promise, editParams: editParams\n                        };\n                        _this.refreshData(crudArgs);\n                    }\n                });\n            }\n        }\n    };\n    Crud.prototype.deleteEvent = function (eventData, action) {\n        var _this = this;\n        if (this.parent.eventSettings.allowDeleting && !this.parent.activeViewOptions.readonly) {\n            this.parent.currentAction = action;\n            var deleteEvents = [];\n            if (typeof eventData === 'string' || typeof eventData === 'number') {\n                deleteEvents = this.parent.eventsData.filter(function (eventObj) {\n                    return eventObj[_this.parent.eventFields.id] === eventData;\n                });\n            }\n            else {\n                deleteEvents = (eventData instanceof Array ? eventData : [eventData]);\n            }\n            if (action) {\n                switch (action) {\n                    case 'Delete':\n                        this.processDelete(deleteEvents);\n                        break;\n                    case 'DeleteOccurrence':\n                        this.processOccurrences(deleteEvents, action);\n                        break;\n                    case 'DeleteFollowingEvents':\n                        this.processFollowSeries(deleteEvents, action);\n                        break;\n                    case 'DeleteSeries':\n                        this.processEntireSeries(deleteEvents, action);\n                        break;\n                }\n            }\n            else {\n                var args = {\n                    requestType: 'eventRemove', cancel: false, data: eventData,\n                    addedRecords: [], changedRecords: [], deletedRecords: deleteEvents\n                };\n                this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\n                    if (!deleteArgs.cancel) {\n                        var promise = void 0;\n                        var fields = _this.parent.eventFields;\n                        var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                        if (deleteArgs.deletedRecords.length > 1) {\n                            editParams.deletedRecords = editParams.deletedRecords.concat(deleteArgs.deletedRecords);\n                            promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n                        }\n                        else {\n                            editParams.deletedRecords.push(deleteArgs.deletedRecords[0]);\n                            promise = _this.parent.dataModule.dataManager.remove(fields.id, deleteArgs.deletedRecords[0], _this.getTable(), _this.getQuery());\n                        }\n                        _this.parent.eventBase.selectWorkCellByTime(deleteArgs.deletedRecords);\n                        var crudArgs = {\n                            requestType: 'eventRemoved', cancel: false,\n                            data: deleteArgs.deletedRecords, promise: promise, editParams: editParams\n                        };\n                        _this.refreshData(crudArgs);\n                    }\n                });\n            }\n        }\n    };\n    Crud.prototype.processOccurrences = function (eventData, action) {\n        var _this = this;\n        var occurrenceData = [];\n        var isDeletedRecords = false;\n        if (eventData instanceof Array) {\n            for (var _i = 0, eventData_3 = eventData; _i < eventData_3.length; _i++) {\n                var event_5 = eventData_3[_i];\n                occurrenceData.push({ occurrence: event_5, parent: this.getParentEvent(event_5) });\n            }\n        }\n        else {\n            occurrenceData = { occurrence: eventData, parent: this.getParentEvent(eventData) };\n        }\n        var updateEvents = (eventData instanceof Array) ? eventData : [eventData];\n        var args = {\n            requestType: action === 'EditOccurrence' ? 'eventChange' : 'eventRemove', cancel: false,\n            addedRecords: [], changedRecords: updateEvents, deletedRecords: []\n        };\n        args.data = occurrenceData;\n        this.parent.trigger(events.actionBegin, args, function (occurrenceArgs) {\n            if (!occurrenceArgs.cancel) {\n                var fields = _this.parent.eventFields;\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                var occurrenceEvents = (occurrenceData instanceof Array ? occurrenceData : [occurrenceData]);\n                var _loop_2 = function (a, count) {\n                    var childEvent = occurrenceArgs.changedRecords[a];\n                    var parentEvent = occurrenceEvents[a].parent;\n                    var parentException = parentEvent[fields.recurrenceException];\n                    var editedData = void 0;\n                    var exceptionDate = void 0;\n                    switch (action) {\n                        case 'EditOccurrence':\n                            editedData = _this.parent.eventsProcessed.filter(function (event) { return event.Guid === childEvent.Guid; })[0];\n                            exceptionDate = _this.excludeDateCheck(editedData[fields.startTime], parentException);\n                            if (exceptionDate !== parentEvent[fields.recurrenceException]) {\n                                parentEvent[fields.recurrenceException] = exceptionDate;\n                                childEvent[fields.recurrenceException] = getRecurrenceStringFromDate(editedData[fields.startTime]);\n                                childEvent[fields.recurrenceID] = parentEvent[fields.id];\n                                childEvent[fields.followingID] = null;\n                                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                                editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n                            }\n                            else {\n                                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n                            }\n                            break;\n                        case 'DeleteOccurrence':\n                            if (!childEvent[fields.recurrenceException]) {\n                                parentEvent[fields.recurrenceException] =\n                                    _this.excludeDateCheck(childEvent[fields.startTime], parentException);\n                                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                            }\n                            if (childEvent[fields.id] !== parentEvent[fields.id]) {\n                                editParams.deletedRecords.push(childEvent);\n                                isDeletedRecords = true;\n                            }\n                            break;\n                    }\n                };\n                for (var a = 0, count = occurrenceArgs.changedRecords.length; a < count; a++) {\n                    _loop_2(a, count);\n                }\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n                _this.parent.eventBase.selectWorkCellByTime(occurrenceArgs.changedRecords);\n                var crudArgs = {\n                    requestType: action === 'EditOccurrence' ? 'eventChanged' : 'eventRemoved',\n                    cancel: false, data: isDeletedRecords ? occurrenceArgs.deletedRecords : occurrenceArgs.changedRecords,\n                    promise: promise, editParams: editParams\n                };\n                _this.refreshData(crudArgs);\n            }\n        });\n    };\n    Crud.prototype.processFollowSeries = function (eventData, action) {\n        var _this = this;\n        var followData = [];\n        if (eventData instanceof Array) {\n            for (var _i = 0, eventData_4 = eventData; _i < eventData_4.length; _i++) {\n                var event_6 = eventData_4[_i];\n                followData.push({ occurrence: event_6, parent: this.getParentEvent(event_6) });\n            }\n        }\n        else {\n            followData = { occurrence: eventData, parent: this.getParentEvent(eventData) };\n        }\n        var updateFollowEvents = (eventData instanceof Array) ? eventData : [eventData];\n        var args = {\n            requestType: action === 'EditFollowingEvents' ? 'eventChange' : 'eventRemove', cancel: false,\n            addedRecords: [], changedRecords: updateFollowEvents, deletedRecords: []\n        };\n        args.data = followData;\n        this.parent.trigger(events.actionBegin, args, function (followArgs) {\n            if (!followArgs.cancel) {\n                var fields_1 = _this.parent.eventFields;\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                var followEvents = followData instanceof Array ? followData : [followData];\n                var _loop_3 = function (a, count) {\n                    var childEvent = followArgs.changedRecords[a];\n                    var parentEvent = followEvents[a].parent;\n                    var followData_1 = _this.parent.eventBase.getEventCollections(parentEvent, childEvent);\n                    var isSpanned = void 0;\n                    switch (action) {\n                        case 'EditFollowingEvents':\n                            _this.processRecurrenceRule(parentEvent, childEvent);\n                            isSpanned = !_this.parent.eventBase.isFollowingEvent(parentEvent, childEvent);\n                            childEvent[fields_1.followingID] = isSpanned ? null : parentEvent[fields_1.id];\n                            childEvent[fields_1.recurrenceID] = null;\n                            editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                            if (!_this.parent.uiStateValues.isIgnoreOccurrence) {\n                                childEvent[fields_1.recurrenceException] = null;\n                                if (followData_1.occurrence.length > 0) {\n                                    var rule = followData_1.occurrence.slice(-1)[0][fields_1.recurrenceRule];\n                                    if (rule.indexOf('COUNT') === -1) {\n                                        childEvent[fields_1.recurrenceRule] = rule;\n                                    }\n                                }\n                                if (followData_1.follow.length > 0) {\n                                    childEvent[fields_1.recurrenceRule] = followData_1.follow.slice(-1)[0][fields_1.recurrenceRule];\n                                    editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.follow);\n                                }\n                                if (isSpanned) {\n                                    followData_1.occurrence = followData_1.occurrence.filter(function (eventObj) {\n                                        return eventObj[fields_1.recurrenceID] === childEvent[fields_1.id];\n                                    });\n                                }\n                                editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence);\n                            }\n                            break;\n                        case 'DeleteFollowingEvents':\n                            _this.processRecurrenceRule(parentEvent, childEvent[fields_1.startTime]);\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                            editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence).concat(followData_1.follow);\n                            break;\n                    }\n                };\n                for (var a = 0, count = followArgs.changedRecords.length; a < count; a++) {\n                    _loop_3(a, count);\n                }\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_1.id, _this.getTable(), _this.getQuery());\n                _this.parent.eventBase.selectWorkCellByTime(followArgs.changedRecords);\n                var crudArgs = {\n                    requestType: action === 'EditFollowingEvents' ? 'eventChanged' : 'eventRemoved',\n                    cancel: false, data: followArgs.changedRecords, promise: promise, editParams: editParams\n                };\n                _this.refreshData(crudArgs);\n            }\n        });\n    };\n    Crud.prototype.processEntireSeries = function (eventData, action) {\n        var _this = this;\n        var seriesData = [];\n        var isDeletedRecords = false;\n        if (eventData instanceof Array) {\n            for (var _i = 0, eventData_5 = eventData; _i < eventData_5.length; _i++) {\n                var event_7 = eventData_5[_i];\n                seriesData.push(this.getParentEvent(event_7, true));\n            }\n        }\n        else {\n            seriesData = this.getParentEvent(eventData, true);\n        }\n        var updateSeriesEvents = (eventData instanceof Array) ? eventData : [eventData];\n        var args = {\n            requestType: action === 'EditSeries' ? 'eventChange' : 'eventRemove', cancel: false,\n            addedRecords: [], changedRecords: updateSeriesEvents, deletedRecords: []\n        };\n        args.data = seriesData;\n        this.parent.trigger(events.actionBegin, args, function (seriesArgs) {\n            if (!seriesArgs.cancel) {\n                var fields_2 = _this.parent.eventFields;\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                var seriesEvents = seriesData instanceof Array ? seriesData : [seriesData];\n                var _loop_4 = function (a, count) {\n                    var childEvent = seriesArgs.changedRecords[a];\n                    var parentEvent = seriesEvents[a];\n                    var eventCollections = _this.parent.eventBase.getEventCollections(parentEvent);\n                    var deletedEvents = eventCollections.follow.concat(eventCollections.occurrence);\n                    switch (action) {\n                        case 'EditSeries':\n                            if ((childEvent[fields_2.startTime] > parentEvent[fields_2.startTime]) && childEvent[fields_2.recurrenceRule]) {\n                                _this.processRecurrenceRule(parentEvent, childEvent);\n                            }\n                            childEvent[fields_2.id] = parentEvent[fields_2.id];\n                            childEvent[fields_2.recurrenceID] = null;\n                            childEvent[fields_2.followingID] = null;\n                            if (_this.parent.uiStateValues.isIgnoreOccurrence && childEvent[fields_2.recurrenceException]) {\n                                var originalParent = _this.parent.eventsData.filter(function (eventObj) {\n                                    return eventObj[fields_2.id] === childEvent[fields_2.id];\n                                });\n                                if (originalParent.length > 0) {\n                                    childEvent[fields_2.recurrenceRule] = originalParent[0][fields_2.recurrenceRule];\n                                }\n                            }\n                            else {\n                                childEvent[fields_2.recurrenceException] = null;\n                                editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents);\n                            }\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n                            _this.parent.uiStateValues.isIgnoreOccurrence = false;\n                            break;\n                        case 'DeleteSeries':\n                            editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents.concat(parentEvent));\n                            isDeletedRecords = true;\n                            break;\n                    }\n                };\n                for (var a = 0, count = seriesArgs.changedRecords.length; a < count; a++) {\n                    _loop_4(a, count);\n                }\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_2.id, _this.getTable(), _this.getQuery());\n                _this.parent.eventBase.selectWorkCellByTime(seriesArgs.changedRecords);\n                var crudArgs = {\n                    requestType: action === 'EditSeries' ? 'eventChanged' : 'eventRemoved',\n                    cancel: false, data: isDeletedRecords ? seriesArgs.deletedRecords : seriesArgs.changedRecords,\n                    promise: promise, editParams: editParams\n                };\n                _this.refreshData(crudArgs);\n            }\n        });\n    };\n    Crud.prototype.processDelete = function (eventData) {\n        var _this = this;\n        var deleteData = [];\n        for (var _i = 0, eventData_6 = eventData; _i < eventData_6.length; _i++) {\n            var eventObj = eventData_6[_i];\n            if (eventObj[this.parent.eventFields.recurrenceRule]) {\n                deleteData.push({ occurrence: eventObj, parent: this.getParentEvent(eventObj) });\n            }\n            else {\n                deleteData.push(eventObj);\n            }\n        }\n        var args = {\n            requestType: 'eventRemove', cancel: false,\n            addedRecords: [], changedRecords: [], deletedRecords: eventData\n        };\n        args.data = deleteData;\n        this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\n            if (!deleteArgs.cancel) {\n                var fields_3 = _this.parent.eventFields;\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                var _loop_5 = function (a, count) {\n                    var isDelete = isNullOrUndefined(deleteArgs.deletedRecords[a][_this.parent.eventFields.recurrenceRule]);\n                    if (!isDelete) {\n                        var parentEvent_1 = deleteData[a].parent;\n                        var isEdited = editParams.changedRecords.filter(function (obj) {\n                            return obj[fields_3.id] === parentEvent_1[fields_3.id];\n                        });\n                        var editedDate = deleteArgs.deletedRecords[a][fields_3.startTime];\n                        if (isEdited.length > 0) {\n                            var editedData = isEdited[0];\n                            editedData[fields_3.recurrenceException] =\n                                _this.excludeDateCheck(editedDate, editedData[fields_3.recurrenceException]);\n                        }\n                        else {\n                            parentEvent_1[fields_3.recurrenceException] =\n                                _this.excludeDateCheck(editedDate, parentEvent_1[fields_3.recurrenceException]);\n                        }\n                        if (isEdited.length === 0) {\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent_1, true));\n                        }\n                        isDelete = deleteArgs.deletedRecords[a][fields_3.id] !== parentEvent_1[fields_3.id];\n                    }\n                    if (isDelete) {\n                        editParams.deletedRecords.push(deleteArgs.deletedRecords[a]);\n                    }\n                };\n                for (var a = 0, count = deleteArgs.deletedRecords.length; a < count; a++) {\n                    _loop_5(a, count);\n                }\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_3.id, _this.getTable(), _this.getQuery());\n                var crudArgs = {\n                    requestType: 'eventRemoved', cancel: false, data: deleteArgs.deletedRecords, promise: promise, editParams: editParams\n                };\n                _this.refreshData(crudArgs);\n            }\n        });\n    };\n    Crud.prototype.processSave = function (data) {\n        var _this = this;\n        var eventData = (data instanceof Array) ? data : [data];\n        var editData = [];\n        for (var _i = 0, eventData_7 = eventData; _i < eventData_7.length; _i++) {\n            var eventObj = eventData_7[_i];\n            if (eventObj[this.parent.eventFields.recurrenceRule]) {\n                editData.push({ occurrence: eventObj, parent: this.getParentEvent(eventObj) });\n            }\n            else {\n                editData.push(eventObj);\n            }\n        }\n        var args = { requestType: 'eventChange', cancel: false, addedRecords: [], changedRecords: eventData, deletedRecords: [] };\n        args.data = editData;\n        this.parent.trigger(events.actionBegin, args, function (editArgs) {\n            if (!editArgs.cancel) {\n                var fields = _this.parent.eventFields;\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                for (var _i = 0, _a = editArgs.changedRecords; _i < _a.length; _i++) {\n                    var record = _a[_i];\n                    if (!isNullOrUndefined(record[fields.recurrenceRule]) && isNullOrUndefined(record[fields.recurrenceException])) {\n                        var exceptionString = getRecurrenceStringFromDate(record[fields.startTime]);\n                        var parentEle = _this.getParentEvent(record);\n                        parentEle[fields.recurrenceException] = isNullOrUndefined(parentEle[fields.recurrenceException]) ?\n                            exceptionString : parentEle[fields.recurrenceException].concat(',' + exceptionString);\n                        record[fields.id] = _this.parent.getEventMaxID();\n                        record[fields.recurrenceException] = exceptionString;\n                        editParams.addedRecords.push(_this.parent.eventBase.processTimezone(record, true));\n                        editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEle, true));\n                    }\n                    else {\n                        editParams.changedRecords.push(_this.parent.eventBase.processTimezone(record, true));\n                    }\n                }\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n                var crudArgs = { requestType: 'eventChanged', cancel: false, data: editArgs.changedRecords, promise: promise, editParams: editParams };\n                _this.refreshData(crudArgs);\n            }\n        });\n    };\n    Crud.prototype.getParentEvent = function (event, isParent) {\n        if (isParent === void 0) { isParent = false; }\n        var parentEvent = this.parent.eventBase.getParentEvent(event, isParent) || event;\n        if (parentEvent[this.parent.eventFields.startTimezone] || parentEvent[this.parent.eventFields.endTimezone]) {\n            this.parent.eventBase.timezoneConvert(parentEvent);\n        }\n        return parentEvent;\n    };\n    Crud.prototype.excludeDateCheck = function (eventStartTime, exceptionDateList) {\n        var exDate = getRecurrenceStringFromDate(eventStartTime);\n        if (!isNullOrUndefined(exceptionDateList)) {\n            if (exceptionDateList.indexOf(exDate) === -1) {\n                exceptionDateList = !(isNullOrUndefined(exceptionDateList)) ? exceptionDateList + ',' + exDate : exDate;\n            }\n        }\n        else {\n            exceptionDateList = exDate;\n        }\n        return exceptionDateList;\n    };\n    Crud.prototype.processRecurrenceRule = function (parentEvent, followEvent) {\n        var fields = this.parent.eventFields;\n        var recurrenceRule = parentEvent[fields.recurrenceRule];\n        var endDate;\n        if (followEvent instanceof Date) {\n            endDate = new Date(+followEvent);\n        }\n        else {\n            endDate = new Date(+followEvent[fields.startTime]);\n            var newRecurrenceRule = followEvent[fields.recurrenceRule];\n            var startDate = parentEvent[fields.startTime];\n            var ruleException = (this.parent.currentAction === 'DeleteFollowingEvents') ? followEvent[fields.recurrenceException] : null;\n            var dateCollection = generate(startDate, newRecurrenceRule, ruleException, this.parent.activeViewOptions.firstDayOfWeek);\n            var untilDate = new Date(dateCollection.slice(-1)[0]);\n            untilDate.setHours(endDate.getHours(), endDate.getMinutes(), endDate.getSeconds());\n            endDate.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds());\n            followEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(newRecurrenceRule, new Date(+untilDate), false);\n        }\n        parentEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(recurrenceRule, util.addDays(new Date(endDate.getTime()), -1), true);\n    };\n    Crud.prototype.getUpdatedRecurrenceRule = function (recurrenceRule, untilDate, isParent) {\n        var splitRule = recurrenceRule.split(';');\n        var updatedRule = '';\n        for (var _i = 0, splitRule_1 = splitRule; _i < splitRule_1.length; _i++) {\n            var rule = splitRule_1[_i];\n            if (rule !== '') {\n                var ruleKey = rule.split('=')[0];\n                var ruleValue = rule.split('=')[1];\n                if (ruleKey === 'COUNT' || ruleKey === 'UNTIL') {\n                    ruleValue = getRecurrenceStringFromDate(untilDate);\n                    rule = rule.replace(rule, 'UNTIL=' + ruleValue);\n                }\n                updatedRule += rule + ';';\n            }\n        }\n        if (isParent && updatedRule.indexOf('UNTIL') === -1) {\n            updatedRule += 'UNTIL=' + getRecurrenceStringFromDate(untilDate);\n        }\n        return updatedRule;\n    };\n    Crud.prototype.isBlockEvent = function (eventData) {\n        var eventCollection = (eventData instanceof Array) ? eventData : [eventData];\n        var value = false;\n        for (var _i = 0, eventCollection_1 = eventCollection; _i < eventCollection_1.length; _i++) {\n            var event_8 = eventCollection_1[_i];\n            value = event_8[this.parent.eventFields.isBlock] || false;\n        }\n        return value;\n    };\n    /**\n     * To destroy the crud module.\n     *\n     * @returns {void}\n     * @private\n     */\n    Crud.prototype.destroy = function () {\n        this.crudObj = null;\n        this.parent = null;\n    };\n    return Crud;\n}());\nexport { Crud };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}