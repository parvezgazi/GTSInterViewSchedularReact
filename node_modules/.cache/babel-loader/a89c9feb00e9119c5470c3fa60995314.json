{"ast":null,"code":"/* eslint-disable jsdoc/require-param, valid-jsdoc */\n/**\n * Function helps to find which highlightSearch is to call based on your data.\n *\n * @param  {HTMLElement} element - Specifies an li element.\n * @param  {string} query - Specifies the string to be highlighted.\n * @param  {boolean} ignoreCase - Specifies the ignoreCase option.\n * @param  {HightLightType} type - Specifies the type of highlight.\n * @returns {void}\n */\nexport function highlightSearch(element, query, ignoreCase, type) {\n  if (query === '') {\n    return;\n  } else {\n    var ignoreRegex = ignoreCase ? 'gim' : 'gm';\n    // eslint-disable-next-line\n    query = /^[a-zA-Z0-9- ]*$/.test(query) ? query : query.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    var replaceQuery = type === 'StartsWith' ? '^(' + query + ')' : type === 'EndsWith' ? '(' + query + ')$' : '(' + query + ')';\n    findTextNode(element, new RegExp(replaceQuery, ignoreRegex));\n  }\n}\n/* eslint-enable jsdoc/require-param, valid-jsdoc */\n/**\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {RegExp} pattern - Specifies the regex to match the searched text.\n * @returns {void}\n */\nfunction findTextNode(element, pattern) {\n  for (var index = 0; element.childNodes && index < element.childNodes.length; index++) {\n    if (element.childNodes[index].nodeType === 3 && element.childNodes[index].textContent.trim() !== '') {\n      var value = element.childNodes[index].nodeValue.trim().replace(pattern, '<span class=\"e-highlight\">$1</span>');\n      element.childNodes[index].nodeValue = '';\n      element.innerHTML = element.innerHTML.trim() + value;\n      break;\n    } else {\n      findTextNode(element.childNodes[index], pattern);\n    }\n  }\n}\n/**\n * Function helps to remove highlighted element based on your data.\n *\n * @param  {HTMLElement} content - Specifies an content element.\n * @returns {void}\n */\nexport function revertHighlightSearch(content) {\n  var contentElement = content.querySelectorAll('.e-highlight');\n  for (var i = contentElement.length - 1; i >= 0; i--) {\n    var parent_1 = contentElement[i].parentNode;\n    var text = document.createTextNode(contentElement[i].textContent);\n    parent_1.replaceChild(text, contentElement[i]);\n  }\n}","map":{"version":3,"names":["highlightSearch","element","query","ignoreCase","type","ignoreRegex","test","replace","replaceQuery","findTextNode","RegExp","pattern","index","childNodes","length","nodeType","textContent","trim","value","nodeValue","innerHTML","revertHighlightSearch","content","contentElement","querySelectorAll","i","parent_1","parentNode","text","document","createTextNode","replaceChild"],"sources":["C:/Users/DELL/Downloads/GTSInterviewSchedulerComponent-main/GTSInterviewSchedulerComponent-main/node_modules/@syncfusion/ej2-dropdowns/src/common/highlight-search.js"],"sourcesContent":["/* eslint-disable jsdoc/require-param, valid-jsdoc */\n/**\n * Function helps to find which highlightSearch is to call based on your data.\n *\n * @param  {HTMLElement} element - Specifies an li element.\n * @param  {string} query - Specifies the string to be highlighted.\n * @param  {boolean} ignoreCase - Specifies the ignoreCase option.\n * @param  {HightLightType} type - Specifies the type of highlight.\n * @returns {void}\n */\nexport function highlightSearch(element, query, ignoreCase, type) {\n    if (query === '') {\n        return;\n    }\n    else {\n        var ignoreRegex = ignoreCase ? 'gim' : 'gm';\n        // eslint-disable-next-line\n        query = /^[a-zA-Z0-9- ]*$/.test(query) ? query : query.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n        var replaceQuery = type === 'StartsWith' ? '^(' + query + ')' : type === 'EndsWith' ?\n            '(' + query + ')$' : '(' + query + ')';\n        findTextNode(element, new RegExp(replaceQuery, ignoreRegex));\n    }\n}\n/* eslint-enable jsdoc/require-param, valid-jsdoc */\n/**\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {RegExp} pattern - Specifies the regex to match the searched text.\n * @returns {void}\n */\nfunction findTextNode(element, pattern) {\n    for (var index = 0; element.childNodes && (index < element.childNodes.length); index++) {\n        if (element.childNodes[index].nodeType === 3 && element.childNodes[index].textContent.trim() !== '') {\n            var value = element.childNodes[index].nodeValue.trim().replace(pattern, '<span class=\"e-highlight\">$1</span>');\n            element.childNodes[index].nodeValue = '';\n            element.innerHTML = element.innerHTML.trim() + value;\n            break;\n        }\n        else {\n            findTextNode(element.childNodes[index], pattern);\n        }\n    }\n}\n/**\n * Function helps to remove highlighted element based on your data.\n *\n * @param  {HTMLElement} content - Specifies an content element.\n * @returns {void}\n */\nexport function revertHighlightSearch(content) {\n    var contentElement = content.querySelectorAll('.e-highlight');\n    for (var i = contentElement.length - 1; i >= 0; i--) {\n        var parent_1 = contentElement[i].parentNode;\n        var text = document.createTextNode(contentElement[i].textContent);\n        parent_1.replaceChild(text, contentElement[i]);\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,eAAeA,CAACC,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAEC,IAAI,EAAE;EAC9D,IAAIF,KAAK,KAAK,EAAE,EAAE;IACd;EACJ,CAAC,MACI;IACD,IAAIG,WAAW,GAAGF,UAAU,GAAG,KAAK,GAAG,IAAI;IAC3C;IACAD,KAAK,GAAG,kBAAkB,CAACI,IAAI,CAACJ,KAAK,CAAC,GAAGA,KAAK,GAAGA,KAAK,CAACK,OAAO,CAAC,qCAAqC,EAAE,MAAM,CAAC;IAC7G,IAAIC,YAAY,GAAGJ,IAAI,KAAK,YAAY,GAAG,IAAI,GAAGF,KAAK,GAAG,GAAG,GAAGE,IAAI,KAAK,UAAU,GAC/E,GAAG,GAAGF,KAAK,GAAG,IAAI,GAAG,GAAG,GAAGA,KAAK,GAAG,GAAG;IAC1CO,YAAY,CAACR,OAAO,EAAE,IAAIS,MAAM,CAACF,YAAY,EAAEH,WAAW,CAAC,CAAC;EAChE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,YAAYA,CAACR,OAAO,EAAEU,OAAO,EAAE;EACpC,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEX,OAAO,CAACY,UAAU,IAAKD,KAAK,GAAGX,OAAO,CAACY,UAAU,CAACC,MAAO,EAAEF,KAAK,EAAE,EAAE;IACpF,IAAIX,OAAO,CAACY,UAAU,CAACD,KAAK,CAAC,CAACG,QAAQ,KAAK,CAAC,IAAId,OAAO,CAACY,UAAU,CAACD,KAAK,CAAC,CAACI,WAAW,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACjG,IAAIC,KAAK,GAAGjB,OAAO,CAACY,UAAU,CAACD,KAAK,CAAC,CAACO,SAAS,CAACF,IAAI,CAAC,CAAC,CAACV,OAAO,CAACI,OAAO,EAAE,qCAAqC,CAAC;MAC9GV,OAAO,CAACY,UAAU,CAACD,KAAK,CAAC,CAACO,SAAS,GAAG,EAAE;MACxClB,OAAO,CAACmB,SAAS,GAAGnB,OAAO,CAACmB,SAAS,CAACH,IAAI,CAAC,CAAC,GAAGC,KAAK;MACpD;IACJ,CAAC,MACI;MACDT,YAAY,CAACR,OAAO,CAACY,UAAU,CAACD,KAAK,CAAC,EAAED,OAAO,CAAC;IACpD;EACJ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,qBAAqBA,CAACC,OAAO,EAAE;EAC3C,IAAIC,cAAc,GAAGD,OAAO,CAACE,gBAAgB,CAAC,cAAc,CAAC;EAC7D,KAAK,IAAIC,CAAC,GAAGF,cAAc,CAACT,MAAM,GAAG,CAAC,EAAEW,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACjD,IAAIC,QAAQ,GAAGH,cAAc,CAACE,CAAC,CAAC,CAACE,UAAU;IAC3C,IAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAACP,cAAc,CAACE,CAAC,CAAC,CAACT,WAAW,CAAC;IACjEU,QAAQ,CAACK,YAAY,CAACH,IAAI,EAAEL,cAAc,CAACE,CAAC,CAAC,CAAC;EAClD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module"}